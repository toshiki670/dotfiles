#!/bin/bash

# Constant
readonly CMDNAME=${0##*/}
readonly VERSION='0.2.0'
readonly TRUE=1
readonly FALSE=0


function usage() {
  cmdname_space=$(echo $CMDNAME | sed -e "s/./ /g")

  cat << __USAGE_TEXT__
Usage:
  $CMDNAME [path]
  $CMDNAME [-v] [-h]
__USAGE_TEXT__
}


function description() {
  cat << __DESCRIPTION_TEXT__
Description:
  Download youtube retry.

Example:
  $ ${CMDNAME} {youtube_id}

Options:
  -h Show help
  -v Show version
__DESCRIPTION_TEXT__
}


function show_help() {
  usage
  echo
  description
}


# Option analysis
while getopts hv OPT
do
  case $OPT in
    "h" ) show_help >&1
          exit 0
          ;;
    "v" ) echo "$CMDNAME $VERSION"
          exit 0
          ;;
    # Invalid options
      * ) usage 1>&2
          exit 1 ;;
  esac
done
# Trim options from $*
shift $(($OPTIND - 1))


if ! type 'yt-dlp' > /dev/null 2>&1; then
  echo "$CMDNAME: Not found the yt-dlp command." 1>&2
  exit 1
fi

# if ! type 'ffmpeg' > /dev/null 2>&1; then
#   echo "$CMDNAME: Not found the ffmpeg command." 1>&2
#   exit 1
# fi

MAX_RETRY=10000
INTERVAL=10


# コマンドが正常終了するまで繰り返すループ
for attempt in $(seq 1 $MAX_RETRY); do
  cookies=~/Local/cookies.txt
  if [[ -f $cookies ]]; then
    yt-dlp --cookies=$cookies --path="~/Downloads/" --format="mp4" "https://www.youtube.com/watch?v=$1"
  else
    yt-dlp --path="~/Downloads/" --format="mp4" "https://www.youtube.com/watch?v=$1"
  fi
  
  # 直前に実行したコマンドの終了ステータスをチェック
  if [[ $? -eq 0 ]]; then
    echo "Command executed successfully."
    break
  else
    echo "Command failed. Retrying..."
    if [ $attempt -lt $MAX_RETRY ]; then
      sleep $INTERVAL
    fi
  fi
done

if [[ $attempt -gt $max_attempts ]]; then
  echo "Command did not succeed within the specified attempts."
fi

exit 0
