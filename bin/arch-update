#!/bin/bash


# Constant
readonly CMDNAME=${0##*/}
readonly VERSION='1.1.0'
readonly TRUE=1
readonly FALSE=0


function usage() {
cmdname_space=$(echo $CMDNAME | sed -e "s/./ /g")

  cat << __USAGE_TEXT__
Usage:
  $CMDNAME
  $CMDNAME [-A] [-P] [-R]
  $cmdname_space [-y] [-p]
  $cmdname_space [-g] [-n]
  $cmdname_space [-d]
  $cmdname_space [-h] [-v]
__USAGE_TEXT__
}

function description() {
  cat << '__DESCRIPTION_TEXT__'
Description:
  Archlinux full update tool.

Options:
  -A All update. (Alias to arch-update)
  -P pacman update.
  -R Remove cached package by using paccache.
  -y yay update.
  -p paru update.
  -g gem update.
  -n neovim update.
  -d dotfiles update.
  -h Show help.
  -v Show version.
__DESCRIPTION_TEXT__
}

function show_help() {
  usage
  echo
  description
}


is_all_update=$TRUE
can_update_pacman=$FALSE
can_remove_cache=$FALSE
can_update_yay=$FALSE
can_update_paru=$FALSE
can_update_gem=$FALSE
can_update_neovim=$FALSE
can_update_dotfiles=$FALSE

# Option analysis
while getopts APRypgndhv OPT
do
  case $OPT in
    "A" ) is_all_update=$TRUE ;;
    "P" ) can_update_pacman=$TRUE; is_all_update=$FALSE ;;
    "R" ) can_remove_cache=$TRUE; is_all_update=$FALSE ;;
    "y" ) can_update_yay=$TRUE; is_all_update=$FALSE ;;
    "p" ) can_update_paru=$TRUE; is_all_update=$FALSE ;;
    "g" ) can_update_gem=$TRUE; is_all_update=$FALSE ;;
    "n" ) can_update_neovim=$TRUE; is_all_update=$FALSE ;;
    "d" ) can_update_dotfiles=$TRUE; is_all_update=$FALSE ;;
    "h" ) show_help >&1
          exit 0
          ;;
    "v" ) echo "$CMDNAME $VERSION"
          exit 0
          ;;
    # Invalid options
      * ) usage 1>&2
          exit 1 ;;
  esac
done
# Trim options from $*
shift $(($OPTIND - 1))


function update_pacman() {
  if type '/usr/sbin/pacman' > /dev/null 2>&1; then
    sudo /usr/sbin/pacman -Syu
  fi
}


function remove_cache() {
  if type '/usr/sbin/paccache' > /dev/null 2>&1; then
    sudo /usr/sbin/paccache -r
    sudo /usr/sbin/paccache -ruk0
  fi
}


function update_yay() {
  if type '/usr/sbin/yay' > /dev/null 2>&1; then
    /usr/sbin/yay
  fi
}


function update_paru() {
  if type '/usr/sbin/paru' > /dev/null 2>&1; then
    /usr/sbin/paru -Syu
  fi
}


function update_gem() {
  if type '/usr/sbin/gem' > /dev/null 2>&1; then
    /usr/sbin/gem update
  fi
}


function update_neovim() {
  if type '/usr/sbin/nvim' > /dev/null 2>&1; then
    /usr/sbin/nvim -c 'cal dein#update()' -c 'qa!'
    # TODO: 外部から`UpdateRemotePlugins`を実行できないため、コメントアウト
    # /usr/sbin/nvim -c 'UpdateRemotePlugins'
  fi
}


function update_dotfiles() {
  if type 'dotfiles' > /dev/null 2>&1; then
    dotfiles -u
  fi
}


if [[ ! -e '/etc/arch-release' ]]; then
  echo "${0##*/}: The current distribution isn't the Archlinux." 1>&2
else
  if [[ $is_all_update == $TRUE ]]; then
    update_pacman
    remove_cache
    update_yay
    update_paru
    update_gem
    update_neovim
    update_dotfiles
  else
    if [[ $can_update_pacman == $TRUE ]]; then
      update_pacman
    fi

    if [[ $can_remove_cache == $TRUE ]]; then
      remove_cache
    fi

    if [[ $can_update_yay == $TRUE ]]; then
      update_yay
    fi

    if [[ $can_update_paru == $TRUE ]]; then
      update_paru
    fi

    if [[ $can_update_gem == $TRUE ]]; then
      update_gem
    fi

    if [[ $can_update_neovim == $TRUE ]]; then
      update_neovim
    fi

    if [[ $can_update_dotfiles == $TRUE ]]; then
      update_dotfiles
    fi
  fi
fi


exit $?
