#!/bin/bash


# Constant
readonly CMDNAME=${0##*/}
readonly VERSION='1.0.0'
readonly TRUE=1
readonly FALSE=0


function usage() {
  cmdname_space=$(echo $CMDNAME | sed -e "s/./ /g")

  cat << __USAGE_TEXT__
Usage:
  $CMDNAME [path]
  $CMDNAME [-v] [-h]
__USAGE_TEXT__
}


function description() {
  cat << __DESCRIPTION_TEXT__
Description:
  Recursive shred.

Example:
  $ ${CMDNAME}
    * Current directory if not given path.
  $ ${CMDNAME} ~/path/to/

Options:
  -h Show help
  -v Show version
__DESCRIPTION_TEXT__
}


function show_help() {
  usage
  echo
  description
}


function check_path_exist() {
  is_correct_path=$TRUE
  while read -r path; do
    if [[ ! -e $path ]]; then
      echo "$CMDNAME: [$path] doesn't exist." 1>&2
      is_correct_path=$FALSE
    fi
  done
  if [[ $is_correct_path == $FALSE ]]; then
   return 1
  fi
}


function destroy_each_completely() {
  while read -r path; do
    find $path -type f -print0 | xargs -0 shred -uvz
    q=$?; if [[ $q != 0 ]]; then return $q;fi

    rm --verbose -rf $path
    q=$?; if [[ $q != 0 ]]; then return $q;fi
  done
}


# Option analysis
while getopts hv OPT
do
  case $OPT in
    "h" ) show_help >&1
          exit 0
          ;;
    "v" ) echo "$CMDNAME $VERSION"
          exit 0
          ;;
    # Invalid options
      * ) usage 1>&2
          exit 1 ;;
  esac
done
# Trim options from $*
shift $(($OPTIND - 1))


if ! type 'shred' > /dev/null 2>&1; then
  echo "$CMDNAME: Not found the shred command." 1>&2
  exit 1
fi


# Uniq paths
paths=$( printf "%s\n" $* | sort -u )
if [[ $* == '' ]]; then paths=$(ls -A1); fi


# Check
echo -e "$paths" | check_path_exist
q=$?; if [[ $q != 0 ]]; then exit $q;fi


read -p "Destroy it completely? [$(echo $paths | xargs echo)] (y/n): " first_check
echo
if [[ $first_check != 'y' ]]; then
  echo "$CMDNAME: Did nothing." 1>&2
  exit 1
else
  echo 'This operation is irrevocable.'
  read -p 'Are you sure? (Type uppercase yes): ' second_check
  echo
  if [[ $second_check != 'YES' ]]; then
    echo "$CMDNAME: Did nothing." 1>&2
    exit 1
  else
    echo -e "$paths" | destroy_each_completely
    q=$?; if [[ $q != 0 ]]; then exit $q;fi
  fi
fi


exit 0
